# Zabbix with Nginx, Postgress, and optional Grafana as Docker Compose

# Based on https://github.com/heyValdemar/zabbix-traefik-letsencrypt-docker-compose
# https://docs.docker.com/compose/networking/
# https://docs.docker.com/compose/compose-file/compose-file-v3/
# https://hub.docker.com/r/zabbix/zabbix-agent2

# Run zabbix-restore-database.sh to restore database if needed.

# Deploy/update Zabbix server with a Docker Compose using the command:
# docker-compose -f zabbix-nginx-posgress.yml --env-file zabbix-nginx-posgress.env -p zabbix up -d --remove-orphans

version: '3'

volumes:
  zabbix-postgres:
  zabbix-postgres-backups:

networks:
  network-zabbix:
    ipam:
      driver: default
      config:
        - subnet: ${ZABBIX_SUBNET}

services:
  postgres:
    image: postgres:${POSTGRES_TAG}
    volumes:
      - zabbix-postgres:/var/lib/postgresql/data
    networks:
      - network-zabbix
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      # Set the real user and DB
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  server:
    image: zabbix/zabbix-server-pgsql:${ZABBIX_TAG}
    networks:
      - network-zabbix
    # links:
    #   - postgres
    # container_name: zabbix-server
    # dns:
    # - 192.168.1.1
    # - 162.168.1.3
    # dns_search:
    # - mydomain.loc
    # - MYDOMAIN.LOC
    environment:
      # Set container hostname to work with zabbix agent in docker
      # HOSTNAME: zabbix-server.loc
      DB_SERVER_HOST: postgres
      DB_SERVER_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ZBX_VALUECACHESIZE: 64M
      ZBX_CACHESIZE: 128M
      ZBX_TRENDCACHESIZE: 128M
    ports:
      - "10051:10051"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  web:
    image: zabbix/zabbix-web-nginx-pgsql:${ZABBIX_TAG}
    networks:
      - network-zabbix
    # links:
    #   - postgres
    #   - server
    environment:
      DB_SERVER_HOST: postgres
      DB_SERVER_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ZBX_SERVER_HOST: zabbix
      ZBX_SERVER_PORT: 10051
      # Timezone https://www.php.net/manual/en/timezones.php
      PHP_TZ: ${PHP_TZ}
    ports:
      - "80:8080"
      - "443:8443"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  agent:
    # Image tag https://hub.docker.com/r/zabbix/zabbix-agent
    image: zabbix/zabbix-agent2:${ZABBIX_AGENT2_TAG}
    networks:
      - network-zabbix
    # links:
    #   - server:zabbix-server
    # container_name: zabbix-agent2
    environment:
      hostname: "zabbix"
      # Set as DNS name on Zabbix server host configuration screen to make checks of Zabbix server itself
      # ZBX_HOSTNAME: "Zabbix server"
      ZBX_HOSTNAME: ${ZBX_HOSTNAME}
      # Container IP of Zabbix server. Works only with IP.
      ZBX_SERVER_HOST: ${ZBX_SERVER_HOST}
      # ZBX_SERVER_HOST: 172.18.0.1
      # ZBX_SERVER_HOST: 0.0.0.0/0
      # ZBX_SERVER_HOST: "172.0.0.0/8"
      # ZBX_SERVER_HOST: zabbix.mydomain.loc
    ports:
      - "10050:10050"
    restart: unless-stopped
    depends_on:
      - postgres
      - server

  backups:
    image: postgres:${POSTGRES_TAG}
    networks:
      - network-zabbix
    # links:
    #   - postgres
    # Database backups prune interval (replace with yours). Default is 7 days.
    # find /srv/zabbix-postgres/backups -type f -mtime +7 | xargs rm -f

    # Zabbix backups interval (replace with yours). Default is 1 day.
    # sleep 24h

    # Run zabbix-restore-database.sh to restore database if needed.
    command: sh -c 'sleep 30m
             && while true; do
             PGPASSWORD="$$(echo $$POSTGRES_PASSWORD)"
             pg_dump
             -h postgres
             -p 5432
             -d ${POSTGRES_DB}
             -U ${POSTGRES_USER} | gzip > /srv/zabbix-postgres/backups/zabbix-postgres-backup-$$(date "+%Y-%m-%d_%H-%M").gz
             && find /srv/zabbix-postgres/backups -type f -mtime +7 | xargs rm -f;
             sleep 24h; done'
    volumes:
      # Database backups location
      - zabbix-postgres-backups:/srv/zabbix-postgres/backups
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      web:
        condition: service_healthy

  # grafana:
  #   container_name: grafana
  #   # image: grafana/grafana
  #   image: monitoringartist/grafana-xxl:8.0
  #   networks:
  #   - network-zabbix
  #   links:
  #     - postgres
  #     - server
  #   restart: always
  #   ports:
  #     - '3000:3000'
  #   # grafana-xxl has all plugins installed
  #   # environment:
  #   #   - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app
  #   depends_on:
  #     - postgres
  #     - server
